<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bpm.lj.mes.base.server.mapper.base.BaseShiftMapper">
  <resultMap id="BaseResultMap" type="com.bpm.lj.mes.base.server.domain.BaseShift">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="creator_id" jdbcType="INTEGER" property="creatorId" />
    <result column="update_id" jdbcType="INTEGER" property="updateId" />
    <result column="work_shop_id" jdbcType="INTEGER" property="workShopId" />
    <result column="shift_name" jdbcType="VARCHAR" property="shiftName" />
    <result column="start_time" jdbcType="VARCHAR" property="startTime" />
    <result column="end_time" jdbcType="VARCHAR" property="endTime" />
    <result column="shift_code" jdbcType="VARCHAR" property="shiftCode" />
    <result column="is_enable" jdbcType="VARCHAR" property="isEnable" />
    <result column="production_line_id" jdbcType="INTEGER" property="productionLineId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, update_time, creator_id, update_id, work_shop_id, shift_name, start_time, 
    end_time, shift_code, is_enable, production_line_id
  </sql>
  <select id="selectByExample" parameterType="com.bpm.lj.mes.base.server.domain.BaseShiftExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from base_shift
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from base_shift
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from base_shift
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bpm.lj.mes.base.server.domain.BaseShiftExample">
    delete from base_shift
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bpm.lj.mes.base.server.domain.BaseShift">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into base_shift (create_time, update_time, creator_id, 
      update_id, work_shop_id, shift_name, 
      start_time, end_time, shift_code, 
      is_enable, production_line_id)
    values (#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{creatorId,jdbcType=INTEGER}, 
      #{updateId,jdbcType=INTEGER}, #{workShopId,jdbcType=INTEGER}, #{shiftName,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR}, #{shiftCode,jdbcType=VARCHAR}, 
      #{isEnable,jdbcType=VARCHAR}, #{productionLineId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bpm.lj.mes.base.server.domain.BaseShift">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into base_shift
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
      <if test="workShopId != null">
        work_shop_id,
      </if>
      <if test="shiftName != null">
        shift_name,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="shiftCode != null">
        shift_code,
      </if>
      <if test="isEnable != null">
        is_enable,
      </if>
      <if test="productionLineId != null">
        production_line_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="workShopId != null">
        #{workShopId,jdbcType=INTEGER},
      </if>
      <if test="shiftName != null">
        #{shiftName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="shiftCode != null">
        #{shiftCode,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null">
        #{isEnable,jdbcType=VARCHAR},
      </if>
      <if test="productionLineId != null">
        #{productionLineId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bpm.lj.mes.base.server.domain.BaseShiftExample" resultType="java.lang.Long">
    select count(*) from base_shift
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update base_shift
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creatorId != null">
        creator_id = #{record.creatorId,jdbcType=INTEGER},
      </if>
      <if test="record.updateId != null">
        update_id = #{record.updateId,jdbcType=INTEGER},
      </if>
      <if test="record.workShopId != null">
        work_shop_id = #{record.workShopId,jdbcType=INTEGER},
      </if>
      <if test="record.shiftName != null">
        shift_name = #{record.shiftName,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=VARCHAR},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=VARCHAR},
      </if>
      <if test="record.shiftCode != null">
        shift_code = #{record.shiftCode,jdbcType=VARCHAR},
      </if>
      <if test="record.isEnable != null">
        is_enable = #{record.isEnable,jdbcType=VARCHAR},
      </if>
      <if test="record.productionLineId != null">
        production_line_id = #{record.productionLineId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update base_shift
    set id = #{record.id,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      creator_id = #{record.creatorId,jdbcType=INTEGER},
      update_id = #{record.updateId,jdbcType=INTEGER},
      work_shop_id = #{record.workShopId,jdbcType=INTEGER},
      shift_name = #{record.shiftName,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=VARCHAR},
      end_time = #{record.endTime,jdbcType=VARCHAR},
      shift_code = #{record.shiftCode,jdbcType=VARCHAR},
      is_enable = #{record.isEnable,jdbcType=VARCHAR},
      production_line_id = #{record.productionLineId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bpm.lj.mes.base.server.domain.BaseShift">
    update base_shift
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="workShopId != null">
        work_shop_id = #{workShopId,jdbcType=INTEGER},
      </if>
      <if test="shiftName != null">
        shift_name = #{shiftName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="shiftCode != null">
        shift_code = #{shiftCode,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null">
        is_enable = #{isEnable,jdbcType=VARCHAR},
      </if>
      <if test="productionLineId != null">
        production_line_id = #{productionLineId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bpm.lj.mes.base.server.domain.BaseShift">
    update base_shift
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      creator_id = #{creatorId,jdbcType=INTEGER},
      update_id = #{updateId,jdbcType=INTEGER},
      work_shop_id = #{workShopId,jdbcType=INTEGER},
      shift_name = #{shiftName,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      shift_code = #{shiftCode,jdbcType=VARCHAR},
      is_enable = #{isEnable,jdbcType=VARCHAR},
      production_line_id = #{productionLineId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>